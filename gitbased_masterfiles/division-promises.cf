#
# *cfdivisions_bundlesequence = gitbased_masterfiles
# *cfdivisions_depends = library_configuration,cfengine
#
# External defined data:
# * common_divisions:gitbased_masterfiles_enabled => enable or not this divisions functionality
#
# library_configuration defined data
# * gitbased_masterfiles_git_branch => optional: git branch of masterfiles. Default 'master'
# * gitbased_masterfiles_git_source => optional: git source of masterfiles. Default 'origin'

body file control
{
    namespace => "common_divisions";
}

bundle agent gitbased_masterfiles
{
  classes:
    "gitbased_masterfiles_git_branch_library_defined" 
       not => strcmp("$(library_configuration.gitbased_masterfiles_git_branch)","");
    "gitbased_masterfiles_git_source_library_defined" 
       not => strcmp("$(library_configuration.gitbased_masterfiles_git_source)","");
    
  vars:
    gitbased_masterfiles_git_branch_library_defined:
      "git_branch" string => "$(library_configuration.gitbased_masterfiles_git_branch)";
    !gitbased_masterfiles_git_branch_library_defined:
      "git_branch" string => "master";

    gitbased_masterfiles_git_source_library_defined:
      "git_source" string => "$(library_configuration.gitbased_masterfiles_git_source)";
    !gitbased_masterfiles_git_source_library_defined:
      "git_source" string => "origin";

  commands:
    gitbased_masterfiles_enabled.am_policy_hub::
      # Handling GIT-pull in masterfiles
      "/usr/bin/git pull $(git_source)"
        contain => gitbased_masterfiles_u_in_dir("$(cfengine_spec.masterfiles_path)"),
	classes => git_pull_masterfiles_ok,
        comment => "Pull $(cfengine_spec.masterfiles_path) from '$(git_source)' git repository",
        handle  => "git_pull_masterfiles";

      # Handling GIT-checkout in masterfiles
      "/usr/bin/git checkout $(git_branch)"
        contain => gitbased_masterfiles_u_in_dir("$(cfengine_spec.masterfiles_path)"),
	classes => git_checkout_masterfiles_ok,
        comment => "Git checkout $(cfengine_spec.masterfiles_path) branch $(git_branch)",
        handle  => "git_checkout_masterfiles";
}

body contain gitbased_masterfiles_u_in_dir(s)
{
    chdir => "$(s)";
}

body classes git_pull_masterfiles_ok
{
    kept_returncodes => { "0" };
    promise_kept => { "git_pull_masterfiles_ok" };
}

body classes git_checkout_masterfiles_ok
{
    kept_returncodes => { "0" };
    promise_kept => { "git_checkout_masterfiles_ok" };
}
